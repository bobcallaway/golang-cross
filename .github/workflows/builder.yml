name: Build golang-cross-builder

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read
    env:
      GOLANG_CROSS_TAG: "v1.19.3-0"
      DOCKER_REGISTRY: "ghcr.io"

    steps:
    - uses: actions/checkout@v3
    - uses: sigstore/cosign-installer@v2
    - name: Get Repo Owner
      id: get_repo_owner
      run: echo "repo_owner=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ steps.get_repo_owner.outputs.repo_owner }}/golang-cross-builder
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ env.GOLANG_CROSS_TAG }}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ steps.get_repo_owner.outputs.repo_owner }}
        password: ${{ secrets.DEPLOY_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Sign the images
      run: |
          IFS=',' read -r -a tags <<< ${{ steps.meta.outputs.tags }}
          for tag in "${tags[@]}"
          do
            echo "sign $tag"
            cosign sign --force "$tag"
          done
      shell: bash
      env:
        COSIGN_EXPERIMENTAL: 1
